#!/usr/bin/env perl

use strict;
use warnings;

use WgetFeature qw(iri);
use FTPTest;

use Encode;


###############################################################################

my $ccedilla_l1 = "\xE7";
my $ccedilla_u8 = "\xC3\xA7";

my $francais = <<EOF;
Some text.
EOF

$francais =~ s/\n/\r\n/;


# code, msg, headers, content
my %urls = (
    "/fran${ccedilla_u8}ais.txt" => {
        content => $francais,
    },
    "/fran${ccedilla_l1}ais.txt" => {
        content => $francais,
    },
);

my $cmdline = $WgetTest::WGETPATH . " --no-iri --local-encoding=iso-8859-1 -S ftp://localhost:{{port}}/fran${ccedilla_l1}ais.txt";

my $expected_error_code = 0;

# To make the downloaded (shell displays non-transcoded), this test listed (transcoded) and expected the same!
if ($^O eq "msys" || $^O eq "cygwin") {
    use Encode::Locale qw($ENCODING_LOCALE $ENCODING_CONSOLE_IN $ENCODING_CONSOLE_OUT);
    print "LC_CTYPE: " . $ENV{'LC_CTYPE'} . "\n";
    print "ENCODING_LOCALE: " . $ENCODING_LOCALE . "\n";
    print "ENCODING_CONSOLE_IN: " . $ENCODING_CONSOLE_IN . "\n";
    print "ENCODING_CONSOLE_OUT: " . $ENCODING_CONSOLE_OUT . "\n";
    print "Encode::Locale::reinit locale from UTF-8 to OS default ...\n";
    $^O = "MSWin32";
    Encode::Locale::reinit();
    print "LC_CTYPE: " . $ENV{'LC_CTYPE'} . "\n";
    print "ENCODING_LOCALE: " . $ENCODING_LOCALE . "\n";
    print "ENCODING_CONSOLE_IN: " . $ENCODING_CONSOLE_IN . "\n";
    print "ENCODING_CONSOLE_OUT: " . $ENCODING_CONSOLE_OUT . "\n";
}

sub can_transcode_to_locale
{
    my ($from, $str) = @_;
    my $m = Encode::encode(locale => Encode::decode($from, $str));
    return Encode::encode($from, Encode::decode(locale => $m)) eq $str;
}

my $ccedilla_expected = ${ccedilla_l1};
if (can_transcode_to_locale($ENCODING_LOCALE, $ccedilla_expected))
{
   $ccedilla_expected = Encode::decode(locale => $ccedilla_expected);
} else {
    print "Skip: Windows can't transcode correctly with current codepage.\n";
    # example: 0xE7 as CP936 transcoded to utf8 results 0x3F.
    exit 77;
}

my %expected_downloaded_files = (
    "fran${ccedilla_expected}ais.txt" => {
        content => $francais,
    },
);

###############################################################################

my $the_test = FTPTest->new (
                             input => \%urls,
                             cmdline => $cmdline,
                             errcode => $expected_error_code,
                             output => \%expected_downloaded_files);
exit $the_test->run();

# vim: et ts=4 sw=4
